package hnqd.aparmentmanager.visitorservice.entity;import com.fasterxml.jackson.annotation.JsonIgnore;import com.thoughtworks.xstream.converters.enums.EnumToStringConverter;import hnqd.aparmentmanager.common.Enum.EVisitStatus;import hnqd.aparmentmanager.visitorservice.converter.VisitStatusConverter;import jakarta.persistence.*;import lombok.Getter;import lombok.Setter;import org.hibernate.annotations.CreationTimestamp;import java.time.LocalDateTime;import java.util.HashSet;import java.util.Set;import org.hibernate.annotations.UpdateTimestamp;import org.springframework.data.annotation.LastModifiedDate;@Getter@Setter@Entity    public class VisitRequest {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Integer id;    @Column(nullable = false)    private Integer residentId;    @Column(nullable = false)    private Integer roomId;    @Column    private LocalDateTime visitDate;    private LocalDateTime expectedCheckinTime;    @Column(nullable = false)    @Convert(converter = VisitStatusConverter.class)    private EVisitStatus status = EVisitStatus.PENDING;    @JsonIgnore    @OneToMany(mappedBy = "visitRequest", cascade = CascadeType.ALL, orphanRemoval = true)    private Set<VisitRequestVisitor> visitRequestVisitors = new HashSet<>();//    @JsonIgnore    @OneToMany(mappedBy = "visitRequest", cascade = CascadeType.ALL, orphanRemoval = true)    private Set<SecurityLog> securityLogs = new HashSet<>();    @Column(updatable = false)    @CreationTimestamp    private LocalDateTime createdAt;    @UpdateTimestamp    private LocalDateTime updatedAt;}