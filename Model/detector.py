from ultralytics import YOLO
from rabbit.producer import send_fire_alert
from datetime import datetime
import time

model = YOLO("fire_model/fire_detection_model.pt")

CONFIDENCE_THRESHOLD = 0.85       # Ng∆∞·ª°ng ƒë·ªô tin c·∫≠y
REQUIRED_DURATION = 3            # S·ªë gi√¢y ph·∫£i ph√°t hi·ªán li√™n t·ª•c

fire_start_time = None            # Th·ªùi gian b·∫Øt ƒë·∫ßu th·∫•y ch√°y

def detect_fire():
    global fire_start_time

    results = model.predict(source=0, imgsz=640, conf=0.6, stream=True, show=True)

    for r in results:
        fire_detected = False

        for box in r.boxes:
            cls = int(box.cls[0])
            label = model.names[cls]
            confidence = float(box.conf[0])  # ƒê·ªô tin c·∫≠y
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            if label.startswith("fire"):
                print(f"[{timestamp}] üî• Detected '{label}' with confidence: {confidence:.2f}")

                if confidence >= CONFIDENCE_THRESHOLD:
                    fire_detected = True
                else:
                    print(f"‚ö†Ô∏è B·ªè qua v√¨ ƒë·ªô tin c·∫≠y th·∫•p h∆°n ng∆∞·ª°ng {CONFIDENCE_THRESHOLD}")

        current_time = time.time()

        if fire_detected:
            if fire_start_time is None:
                fire_start_time = current_time
                print("‚è±Ô∏è B·∫Øt ƒë·∫ßu t√≠nh th·ªùi gian ph√°t hi·ªán ch√°y...")
            elif current_time - fire_start_time >= REQUIRED_DURATION:
                send_fire_alert({
                    "location": "Lobby",
                    "time": datetime.now().isoformat()
                })
                print("üö® ƒê√É G·ª¨I C·∫¢NH B√ÅO CH√ÅY")
                fire_start_time = None  # Reset
        else:
            fire_start_time = None  # Reset n·∫øu kh√¥ng th·∫•y ch√°y

        time.sleep(0.1)

if __name__ == "__main__":
    detect_fire()
